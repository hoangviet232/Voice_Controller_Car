#include <Servo.h>
#include <AFMotor.h>

//-----------------------B------------------------------//
char value;
int speedCar=255;
int speedCar1=200;

boolean lightFront = false;
boolean lightBack = false;
boolean S_light = false;
boolean V_horn = false;
//------------------------O-----------------------------//
int distance2;
int distance;
int distance3;
int f;
int b;
int Left;
int Right;
int F = 0;
int L = 0;
int R = 0;
int L1 = 0;
int R1 = 0;
int L2 = 0;
int R2 = 0;
int L3 = 0;
int R3 = 0;
//----------Defines----------------//
#define Echo3 12
#define Trig3 8
#define Echo A0
#define Trig A1
#define Echo1 A2
#define Trig1 A3
#define S_motor 10
#define F_LED A4
#define B_LED A5
#define horn 9
#define spoint 90
#define Echo2 A4
#define Trig2 A5



//-----------Motors-----------------//

Servo servo;
AF_DCMotor motor1(1);
AF_DCMotor motor2(2);
AF_DCMotor motor3(3);
AF_DCMotor motor4(4);


void setup() {
  Serial.begin(9600);
  pinMode(Trig3,OUTPUT);//Trig 12
  pinMode(Echo3,INPUT);//Echo 11
  pinMode(Trig2,OUTPUT);//Trig 12
  pinMode(Echo2,INPUT);//Echo 11
  pinMode(Trig,OUTPUT);//Trig A1
  pinMode(Echo,INPUT);//Echo A0
  pinMode(Trig1,OUTPUT);//Trig A1
  pinMode(Echo1,INPUT);//Echo A0
  pinMode(F_LED,OUTPUT);//F_LED A4 pin
  pinMode(B_LED,OUTPUT);//B_LED A5 pin
  pinMode(horn,OUTPUT);
  servo.attach(S_motor);

}

void loop() {
      
  blutooth_mode();
      // obstacle_mode();
        // voice_control();  
}


//---------------------------Blutooth_Mode---------------------------//
void blutooth_mode(){

if (Serial.available() > 0) {
  value = Serial.read();
  Stop();       //Initialize with motors stopped.

if (lightFront) {digitalWrite(F_LED, HIGH);
}
if (!lightFront) {digitalWrite(F_LED, LOW);
}
if (lightBack) {digitalWrite(B_LED, HIGH);
}
if (!lightBack) {digitalWrite(B_LED, LOW);
}
if (V_horn) {digitalWrite(horn, HIGH);
}
if (!V_horn) {digitalWrite(horn, LOW);
}



switch (value) {
case 'F':forward();break;
case 'B':backward();break;
case 'L':left();break;
case 'R':right();break;
case 'I':forwardRight();break;
case 'G':forwardLeft();break;
case 'J':backwardRight();break;
case 'H':backwardLeft();break;
case 'S':Stop();break;
case '0':speedCar = 75;break;
case '1':speedCar = 100;break;
case '2':speedCar = 125;break;
case '3':speedCar = 150;break;
case '4':speedCar = 175;break;
case '5':speedCar = 200;break;
case '6':speedCar = 220;break;
case '7':speedCar = 230;break;
case '8':speedCar = 240;break;
case '9':speedCar = 250;break;
case 'q':speedCar = 255;break;
case 'W':lightFront = true;break;
case 'w':lightFront = false;break;
case 'U':lightBack = true;break;
case 'u':lightBack = false;break;
case 'V':V_horn = true;break;
case 'v':V_horn = false;break;

}}  
}

//------------------------Obstacle_Mode------------------------------//

void obstacle_mode(){  
  distance = ultrasonic();
  distance2 = ultrasonic2();
  distance3 = ultrasonic3();
  if (distance <= 30 || distance2 <= 30 || distance3 <= 30 ) {
    Stop();
    backward();
    delay(100);
    Stop();
    L = leftsee();
    L2 = leftsee2();
    L3 = leftsee3();
    servo.write(spoint);
    delay(200);
    R = rightsee();
    R2 = rightsee2();
    R3 = rightsee3();
    servo.write(spoint);
    if (L < R || L2 < R2 || L3 < R3) {
      O_right();
      delay(200);
      Stop();
      delay(200);
    } else if (L > R || L2 > R2 || L3 > R3) {
      O_left();
      delay(500);
      Stop();
      delay(200);
    }
  } else {
    forward();
  }
}

//-------------------------Voice_Control-----------------------------//

 void voice_control(){
  if (Serial.available() > 0) {
    value = Serial.read();
    Serial.println(value);
    if (value == '^') {
      O_forward();
      delay(500);
      Stop();
    } else if (value == '-') {
      O_backward();
      delay(500);
      Stop();
    } else if (value == '<') {
      L = leftsee();
      servo.write(spoint);
      if (L >= 20 ) {
      O_left();
      delay(500);
      Stop();
      } else if (L < 20) {
        Stop();
      }
    } else if (value == '>') {
      R = rightsee();
      servo.write(spoint);
      if (R >= 20 ) {
      O_right();
      delay(500);
      Stop();
      } else if (R < 20) {
        Stop();
      }
    } else if (value == '*') {
      Stop();
    }
    } else if (value == '!') {
      {digitalWrite(F_LED, HIGH);
    }
    } else if (value == '@') {
      {digitalWrite(F_LED, LOW);
    }
    } else if (value == '+') {
      {digitalWrite(B_LED, HIGH);
    }
    } else if (value == '_') {
      {digitalWrite(B_LED, LOW);
    }
    } else if (value == '#') {
      {digitalWrite(horn, HIGH);
    }
    } else if (value == '/') {
      {digitalWrite(horn, LOW);
    }
  }
}
// void voice_control(){

//   if (Serial.available() > 0) {
//     value = Serial.read();
//     Serial.println(value);
//     if (value == '^') {
//       O_forward1();
//       delay(500);
//       Stop();
//     } else if (value == '-') {
//       O_backward1();
//       delay(500);
//       Stop();
//     } else if (value == '<') {
//       O_left1();
//       servo.write(spoint);
//       delay(500);
//       Stop();
//     } else if (value == '>') {
//       O_right1();
//       servo.write(spoint);
//       delay(500);
//       Stop();
//     } else if (value == '*') {
//       Stop();
//     }
//     } else if (value == '!') {
//       {digitalWrite(F_LED, HIGH);
//     }
//     } else if (value == '@') {
//       {digitalWrite(F_LED, LOW);
//     }
//     } else if (value == '+') {
//       {digitalWrite(B_LED, HIGH);
//     }
//     } else if (value == '_') {
//       {digitalWrite(B_LED, LOW);
//     }
//     } else if (value == '#') {
//       {digitalWrite(horn, HIGH);
//     }
//     } else if (value == '/') {
//       {digitalWrite(horn, LOW);
//     }
//   }
// }

//-------------------------Ultrasonic----------------------------------//
int ultrasonic3(){
  digitalWrite(Trig3,LOW);
  delayMicroseconds(4);
  digitalWrite(Trig3,HIGH);
  delayMicroseconds(10);
  digitalWrite(Trig3,LOW);
  long t = pulseIn(Echo3,HIGH);
  long cm= t / 29/ 2;
  return cm;    
}
int ultrasonic2(){
  digitalWrite(Trig2,LOW);
  delayMicroseconds(4);
  digitalWrite(Trig2,HIGH);
  delayMicroseconds(10);
  digitalWrite(Trig2,LOW);
  long t = pulseIn(Echo2,HIGH);
  long cm= t / 29/ 2;
  return cm;    
}
int ultrasonic(){
  digitalWrite(Trig,LOW);
  delayMicroseconds(4);
  digitalWrite(Trig,HIGH);
  delayMicroseconds(10);
  digitalWrite(Trig,LOW);
  long t = pulseIn(Echo,HIGH);
  long cm= t / 29/ 2;
  return cm;    
}
int ultrasonic1(){
  digitalWrite(Trig1,LOW);
  delayMicroseconds(4);
  digitalWrite(Trig1,HIGH);
  delayMicroseconds(10);
  digitalWrite(Trig1,LOW);
  long t = pulseIn(Echo1,HIGH);
  long cm= t / 29/ 2;
  return cm;    
}
void forward()
{
  motor1.run(FORWARD);
  motor2.run(FORWARD);
  motor3.run(FORWARD);
  motor4.run(FORWARD);

  motor1.setSpeed(speedCar);
  motor2.setSpeed(speedCar);
  motor3.setSpeed(speedCar);
  motor4.setSpeed(speedCar);

  digitalWrite(F_LED,HIGH);


  forwardview();

}
void backward()
{
  motor1.run(BACKWARD);
  motor2.run(BACKWARD);
  motor3.run(BACKWARD);
  motor4.run(BACKWARD);
  
  motor1.setSpeed(speedCar);
  motor2.setSpeed(speedCar);
  motor3.setSpeed(speedCar);
  motor4.setSpeed(speedCar);

  digitalWrite(B_LED,HIGH);

}
void left()
{
  motor1.run(BACKWARD);
  motor2.run(BACKWARD);
  motor3.run(FORWARD);
  motor4.run(FORWARD);
  motor1.setSpeed(speedCar);
  motor2.setSpeed(speedCar);
  motor3.setSpeed(speedCar);
  motor4.setSpeed(speedCar);


  leftview();

    
}

void right()
{
  motor1.run(FORWARD);
  motor2.run(FORWARD);
  motor3.run(BACKWARD);
  motor4.run(BACKWARD);
  motor1.setSpeed(speedCar);
  motor2.setSpeed(speedCar);
  motor3.setSpeed(speedCar);
  motor4.setSpeed(speedCar);


  rightview();

}
void O_forward(){ 
  fsee();
  if(f <= 40){
  Stop();
 }else {
  motor1.run(FORWARD);
  motor2.run(FORWARD);
  motor3.run(FORWARD);
  motor4.run(FORWARD);

  motor1.setSpeed(speedCar);
  motor2.setSpeed(speedCar);
  motor3.setSpeed(speedCar);
  motor4.setSpeed(speedCar);

  digitalWrite(F_LED,HIGH);
  delay(100);
  digitalWrite(F_LED,LOW);

  forwardview();

 }
}
void O_forward1(){ 

  motor1.run(FORWARD);
  motor2.run(FORWARD);
  motor3.run(FORWARD);
  motor4.run(FORWARD);

  motor1.setSpeed(speedCar);
  motor2.setSpeed(speedCar);
  motor3.setSpeed(speedCar);
  motor4.setSpeed(speedCar);

  digitalWrite(F_LED,HIGH);
  delay(100);
  digitalWrite(F_LED,LOW);

  forwardview();

 
}
void O_backward(){ 
  bsee();
  if(b <= 40){
  Stop();
} else {
  motor1.run(BACKWARD);
  motor2.run(BACKWARD);
  motor3.run(BACKWARD);
  motor4.run(BACKWARD);
  
  motor1.setSpeed(speedCar);
  motor2.setSpeed(speedCar);
  motor3.setSpeed(speedCar);
  motor4.setSpeed(speedCar);

  digitalWrite(B_LED,HIGH);
  delay(100);
  digitalWrite(B_LED,LOW);


}
}
void O_backward1(){ 

  motor1.run(BACKWARD);
  motor2.run(BACKWARD);
  motor3.run(BACKWARD);
  motor4.run(BACKWARD);
  
  motor1.setSpeed(speedCar);
  motor2.setSpeed(speedCar);
  motor3.setSpeed(speedCar);
  motor4.setSpeed(speedCar);

  digitalWrite(B_LED,HIGH);
  delay(100);
  digitalWrite(B_LED,LOW);



}
void O_left()
{ L = leftsee();
  servo.write(spoint);
  if (L >= 20 ) {
  motor1.run(BACKWARD);
  motor2.run(BACKWARD);
  motor3.run(FORWARD);
  motor4.run(FORWARD);
  motor1.setSpeed(speedCar1);
  motor2.setSpeed(speedCar1);
  motor3.setSpeed(speedCar1);
  motor4.setSpeed(speedCar1);



  } else if (L < 20) {
  Stop();
  }  
}
void O_left1()
{ 
  servo.write(135);
  motor1.run(BACKWARD);
  motor2.run(BACKWARD);
  motor3.run(FORWARD);
  motor4.run(FORWARD);
  motor1.setSpeed(speedCar1);
  motor2.setSpeed(speedCar1);
  motor3.setSpeed(speedCar1);
  motor4.setSpeed(speedCar1);


}


void O_right()
{ R = rightsee();
  servo.write(spoint);
  if (R >= 20 ) {
  motor1.run(FORWARD);
  motor2.run(FORWARD);
  motor3.run(BACKWARD);
  motor4.run(BACKWARD);
  motor1.setSpeed(speedCar1);
  motor2.setSpeed(speedCar1);
  motor3.setSpeed(speedCar1);
  motor4.setSpeed(speedCar1);

  } else if (R < 20) {
    Stop();
    }
}
void O_right1()
{ servo.write(40);
  motor1.run(FORWARD);
  motor2.run(FORWARD);
  motor3.run(BACKWARD);
  motor4.run(BACKWARD);
  motor1.setSpeed(speedCar1);
  motor2.setSpeed(speedCar1);
  motor3.setSpeed(speedCar1);
  motor4.setSpeed(speedCar1);

}

void forwardRight()
{
  motor1.run(FORWARD);
  motor2.run(FORWARD);
  motor3.run(FORWARD);
  motor4.run(RELEASE);
  
  motor1.setSpeed(speedCar);
  motor2.setSpeed(speedCar);
  motor3.setSpeed(speedCar);

}

void forwardLeft()
{
  motor1.run(RELEASE);
  motor2.run(FORWARD);
  motor3.run(FORWARD);
  motor4.run(FORWARD);
  
  motor1.setSpeed(speedCar);
  motor2.setSpeed(speedCar);
  motor4.setSpeed(speedCar);

}
void backwardRight()
{
  motor1.run(BACKWARD);
  motor2.run(BACKWARD);
  motor3.run(RELEASE);
  motor4.run(BACKWARD);
  motor1.setSpeed(speedCar);
  motor2.setSpeed(speedCar);
  motor4.setSpeed(speedCar);

  digitalWrite(B_LED,HIGH);

}
void backwardLeft()
{
  motor1.run(BACKWARD);
  motor2.run(RELEASE);
  motor3.run(BACKWARD);
  motor4.run(BACKWARD);
  motor1.setSpeed(speedCar);
  motor2.setSpeed(speedCar);
  motor3.setSpeed(speedCar);

  digitalWrite(B_LED,HIGH);

}
void Stop()
{
  motor1.run(RELEASE);
  motor2.run(RELEASE);
  motor3.run(RELEASE);
  motor4.run(RELEASE);
}
int fsee(){
  servo.write(spoint);
  delay(500);
  f = ultrasonic();
  return f;
}
int bsee(){
  b = ultrasonic1();
  return b;
}
int rightsee(){
  servo.write(40);
  delay(500);
  Left = ultrasonic();
  return Left;
}
int rightsee2(){
  servo.write(40);
  delay(500);
  Left = ultrasonic();
  return Left;
}
int rightsee3(){
  servo.write(40);
  delay(500);
  Left = ultrasonic();
  return Left;
}
int leftsee(){
  servo.write(135);
  delay(500);
  Right = ultrasonic();
  return Right;
}
int leftsee2(){
  servo.write(135);
  delay(500);
  Right = ultrasonic();
  return Right;
}
int leftsee3(){
  servo.write(135);
  delay(500);
  Right = ultrasonic();
  return Right;
}

int leftview(){
  servo.write(180);
  
}

int rightview(){
  servo.write(20);
}

int forwardview(){
  servo.write(spoint);
}


